{"version":3,"sources":["astar/Cell.js","utility_components/BackButton.js","utility_components/ClearButton.js","astar/components/NavBar.js","astar/Draw.js","dijkstra/Dijkstra.js","backtracking/BackTracking.js","astar/AStar.js","backtracking/Cell.js","backtracking/components/NavBar.js","sorting/components/Graph.js","sorting/components/sortingAlgos/mergesort.js","sorting/components/sortingAlgos/bubblesort.js","sorting/components/sortingAlgos/selectionsort.js","sorting/components/sortingAlgos/insertionsort.js","sorting/components/sortingAlgos/quicksort.js","sorting/components/animations/mergesort_animations.js","sorting/components/animations/bubblesort_animations.js","sorting/components/animations/selectionsort_animations.js","sorting/components/animations/quicksort_animations.js","sorting/components/animations/insertionsort_animations.js","linearsearch/LinearSearch.js","binarysearch/BinarySearch.js","sorting/components/Menu.js","sorting/components/SortingVisualizer.js","sorting/Sorting.js","utility_components/SearchButton.js","linearsearch/NavBar.js","tsp/Point.js","utility_components/StartButton.js","tsp/NavBar.js","tsp/GeneticAlgo.js","tsp/TSP.js","App.js","index.js"],"names":["Cell","i","j","rows","cols","this","f","g","h","neighbours","prev","undefined","wall","Math","random","push","BackButton","onBackButtonClick","props","onClick","className","React","Component","ClearButton","onClearButtonClick","NavBar","stage","algo","showingCompleteGrid","p5","grid","length","breadth","start","end","x","y","fill","stroke","rect","showingOpenSet","openSet","showingclosedSet","closedSet","showingPath","path","xyz","Array","current","noSolution","solution","reLoad","flag","Dijkstra","state","componentDidUpdate","cleaning","initializeGrid","initializeStartAndEnd","componentDidMount","setup","parent","createCanvas","windowWidth","windowHeight","initializeCanvas","frameRate","windowResized","width","height","position","addNeighbours","draw","console","log","background","lowest_f_value_index","removeFromArray","neighbour","includes","tempG","updateNeighbourScore","lowestIndex","mousePressed","e","mouseX","mouseY","floor","setState","array","element","splice","visited","walls","next","stack","BackTracking","canvasParentRef","cell","showGrid","noStroke","checkNeighbours","removeWalls","pop","noFill","strokeWeight","line","top","index","right","bottom","left","AStar","heuristic","sqrt","Graph","graph","map","num","id","style","backgroundColor","getMergeSortAnimations","animations","auxArray","slice","mergesort","mid","k","merge","getBubbleSortAnimations","n","temp","bubblesort","getSelectionSortAnimations","maxi","selectionsort","getInsertionSortAnimations","insertionsort","getQuickSortAnimations","quicksort","pIndex","pivot","partition","randomisedPartition","animateMergeSort","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","PRIMARY_COLOR","animateBubbleSort","decider","animateSelectionSort","animateQuickSort","animateInsertionSort","lo","hi","Menu","generateNewArray","onGenerateNewArray","a","disablingButtons","getElementById","disabled","class","SortingVisualizer","Sorting","resetArray","SearchButton","onSearchButtonClick","placeholder","key","found","LinearSearch","showArray","textSize","text","value","BinarySearch","sort","b","Point","r","StartButton","onStartButtonClick","initializePopulation","population","order","populationSize","shuffle","calcFitness","points","fitness","d","calcDist","totalFitness","normalizeFitness","sum","x1","y1","getCurrentBest","best","nextGeneration","newPopulation","newOrder","crossOver","getOne","mutate","list","prob","order1","order2","Infinity","idx","mutationRate","indexA","swap","bestFitness","bestPath","complete","TSP","prevWidth","prevHeight","showFinalPath","noCursor","ellipse","showPoints","currentBestIndex","currentBestFitness","currentBestPath","showLines","calcPathDistance","dist","beginShape","vertex","endShape","App","option","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c4aa9afa.chunk.js","sourcesContent":["class Cell{\n    constructor(i, j, rows, cols){\n        this.f = 0;\n        this.g = 0;\n        this.h = 0;\n        this.i = i;\n        this.j = j;\n        this.rows = rows;\n        this.cols = cols;\n        this.neighbours = [];\n        this.prev = undefined;\n        this.wall = false;\n        if(Math.random(1) < 0.4)\n            this.wall = true;\n    }\n    addNeighbours(){\n        let i = this.i;\n        let j = this.j;\n        let rows = this.rows;\n        let cols = this.cols;\n        if(i > 0)\n            this.neighbours.push([i-1, j]);\n        if(i < cols-1)\n            this.neighbours.push([i+1, j]);\n        if(j > 0)\n            this.neighbours.push([i, j-1]);\n        if(j < rows-1)\n            this.neighbours.push([i, j+1]);\n        if(i > 0 && j > 0)\n            this.neighbours.push([i-1, j-1]);\n        if(i > 0 && j < rows - 1)\n            this.neighbours.push([i-1, j+1]);\n        if(i < cols- 1 && j > 0)\n            this.neighbours.push([i+1, j-1]);\n        if(i < cols-1 && j < rows-1)\n            this.neighbours.push([i+1, j+1]);\n    }\n}\n\nexport default Cell;","import React from \"react\";\n\nclass BackButton extends React.Component {\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onBackButtonClick} className=\"btn btn-primary mx-2\">Back</button>;\n  }\n}\n\nexport default BackButton;\n","import React from \"react\";\n\nclass ClearButton extends React.Component {\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onClearButtonClick} className=\"btn btn-primary mx-2\">Clear</button>;\n  }\n}\n\nexport default ClearButton;\n","import React from \"react\";\nimport BackButton from \"../../utility_components/BackButton\";\nimport ClearButton from \"../../utility_components/ClearButton\";\n\n\nclass NavBar extends React.Component {\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  }\n\n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div>\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          Click where you want to start from\n        </div>\n      );\n    }\n    if (this.props.stage === 1) {\n      return (\n        <div>\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          Click where you want to end\n        </div>\n      );\n    }\n\n    if (this.props.stage === 2) {\n        return (\n          <div>\n            <h2>{this.props.algo}</h2>\n            <BackButton onBackButtonClick={this.onBackButtonClick}/>\n            <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          </div>\n        );\n      }\n  }\n}\n\nexport default NavBar;\n","export function showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end){\n    for (let i = 0; i < cols; i++) {\n        for (let j = 0; j < rows; j++) {\n          let x = i * length;\n          let y = j * breadth;\n          p5.fill(255);\n          p5.stroke(0);\n          if (grid[i][j].wall) {\n            p5.fill(0);\n          }\n          if (grid[i][j] === start) {\n            p5.fill(233, 222, 21);\n          }\n          if (grid[i][j] === end) {\n            p5.fill(228, 31, 4);\n          }\n          p5.rect(x, y, length, breadth);\n        }\n      }\n}\n\nexport function showingOpenSet(p5, openSet, length, breadth, start, end){\n    for (let i = 0; i < openSet.length; i++) {\n        let x = openSet[i].i;\n        let y = openSet[i].j;\n        x = x * length;\n        y = y * breadth;\n        p5.fill(139, 237, 151);\n        p5.stroke(0);\n        if (openSet[i] === start) {\n          p5.fill(233, 222, 21);\n        }\n        if (openSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n        p5.rect(x, y, length, breadth);\n      }\n}\n\nexport function showingclosedSet(p5, closedSet, length, breadth, start, end){\n    for (let i = 0; i < closedSet.length; i++) {\n        let x = closedSet[i].i;\n        let y = closedSet[i].j;\n        x = x * length;\n        y = y * breadth;\n        p5.fill(4, 228, 226);\n        p5.stroke(0);\n        if (closedSet[i] === start) {\n          p5.fill(233, 222, 21);\n        } else if (closedSet[i] === end) {\n          p5.fill(228, 31, 4);\n        }\n        p5.rect(x, y, length, breadth);\n      }\n}\n\nexport function showingPath(p5, path, length, breadth, start, end){\n    for (let i = 0; i < path.length; i++) {\n      let x = path[i].i;\n      let y = path[i].j;\n      x = x * length;\n      y = y * breadth;\n      p5.fill(0, 0, 255);\n      p5.stroke(0);\n      if (path[i] === start) {\n        p5.fill(233, 222, 21);\n      } else if (path[i] === end) {\n        p5.fill(228, 31, 4);\n      }\n      p5.rect(x, y, length, breadth);\n    }\n  }","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"../astar/Cell\";\nimport NavBar from \"../astar/components/NavBar\";\nimport {\n  showingCompleteGrid,\n  showingOpenSet,\n  showingclosedSet,\n  showingPath,\n} from \"../astar/Draw\";\n\nlet cols = 25,\n  rows = 11;\nlet length, breadth;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n  end = null,\n  current = null;\nlet noSolution = false,\n  solution = false;\nlet path = [];\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass Dijkstra extends React.Component {\n  state = { start: null, end: null, stage: 0 };\n\n  componentDidUpdate = () => {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    this.initializeStartAndEnd();\n  };\n\n  componentDidMount = () => {\n    this.initializeGrid();\n    this.initializeStartAndEnd();\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\n      .parent(parent);\n    this.initializeCanvas(p5);\n    p5.frameRate(7);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution || noSolution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Cell(i, j, rows, cols);\n        grid[i][j].addNeighbours();\n      }\n    }\n  };\n\n  initializeStartAndEnd = () => {\n    start = this.state.start;\n    end = this.state.end;\n    if (start) openSet.push(start);\n  };\n\n  draw = (p5) => {\n    console.log(\"draw\");\n    if(flag === true){\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n      showingPath(p5, path, length, breadth, start, end);\n    }\n    if (!noSolution && !solution) {\n      p5.background(0);\n      if (start && end) {\n        if (openSet.length > 0) {\n          current = openSet[this.lowest_f_value_index()];\n          if (current === end) {\n            solution = true;\n          }\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n\n          let neighbours = current.neighbours;\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  this.updateNeighbourScore(neighbour, tempG);\n                }\n              } else {\n                openSet.push(neighbour);\n                this.updateNeighbourScore(neighbour, tempG);\n              }\n            }\n          }\n        } else if (!solution) {\n          noSolution = true;\n        }\n      }\n\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      showingPath(p5, path, length, breadth, start, end);\n    }\n\n    if (noSolution) {\n      console.log(\"No Solution\");\n    }\n  };\n\n  updateNeighbourScore = (neighbour, tempG) => {\n    neighbour.g = tempG;\n    neighbour.prev = current;\n    neighbour.f = neighbour.g + neighbour.h;\n  };\n\n  lowest_f_value_index = () => {\n    let lowestIndex = 0;\n    for (let i = 0; i < openSet.length; i++) {\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n    }\n    return lowestIndex;\n  };\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\n    }\n  };\n\n  cleaning = () => {\n    openSet = [];\n    closedSet = [];\n    path = [];\n    current = null;\n    reLoad = false;\n    noSolution = false;\n    solution = false;\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, end: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Dijkstra\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dijkstra;","import React from \"react\";\nimport Cell from \"./Cell\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./components/NavBar\";\n\nlet length, breadth;\nlet rows = 11, cols = 25;\nlet grid = [];\nlet current = null,\n  next = null,\n  start = null;\nlet stack = [];\nlet reLoad = false;\nlet solution = false;\nlet flag = true;\nlet xyz;\n\nclass BackTracking extends React.Component {\n  state = { start: null, stage: 0 };\n\n  componentDidMount() {\n    grid = [];\n    this.initializeGrid();\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    current = this.state.start;\n    start = this.state.start;\n  }\n\n  setup = (p5, canvasParentRef) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8).parent(canvasParentRef);\n    p5.frameRate(15);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        let cell = new Cell(i, j);\n        grid.push(cell);\n      }\n    }\n  };\n\n  draw = (p5) => {\n    if(flag === true){\n      this.showGrid(p5);\n    }\n    if (!solution) {\n      p5.background(0);\n      this.showGrid(p5);\n      if (current) {\n        current.visited = true;\n        p5.noStroke();\n        p5.fill(21, 42, 233);\n        p5.rect(current.i * length, current.j * breadth, length, breadth);\n        next = this.checkNeighbours();\n        if (next) {\n          stack.push(current);\n          this.removeWalls();\n          current = next;\n        } else if (stack.length > 0) {\n          current = stack.pop();\n        } else {\n          solution = true;\n        }\n      }\n    }\n  };\n\n  showGrid = (p5) => {\n    for (let i = 0; i < grid.length; i++) {\n      let x = grid[i].i;\n      let y = grid[i].j;\n      x = x * length;\n      y = y * breadth;\n      p5.noFill();\n      p5.stroke(255);\n      p5.strokeWeight(2);\n      if (grid[i].walls[0]) {\n        p5.line(x, y, x + length, y);\n      }\n      if (grid[i].walls[1]) {\n        p5.line(x + length, y, x + length, y + breadth);\n      }\n      if (grid[i].walls[2]) {\n        p5.line(x + length, y + breadth, x, y + breadth);\n      }\n      if (grid[i].walls[3]) {\n        p5.line(x, y + breadth, x, y);\n      }\n      if (start === grid[i]) {\n        p5.noStroke();\n        p5.fill(255, 0, 0);\n        p5.rect(x, y, length, breadth);\n      } else if (grid[i].visited) {\n        p5.noStroke();\n        p5.fill(46, 240, 113);\n        p5.rect(x, y, length+1, breadth+1);\n      }\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows) {\n      if (!this.state.start)\n        this.setState({ start: grid[j * cols + i], stage: 1 });\n    }\n  };\n\n  checkNeighbours = () => {\n    const i = current.i;\n    const j = current.j;\n    let neighbours = [];\n    let top = grid[this.index(i, j - 1)];\n    let right = grid[this.index(i + 1, j)];\n    let bottom = grid[this.index(i, j + 1)];\n    let left = grid[this.index(i - 1, j)];\n    if (top && !top.visited) neighbours.push(top);\n    if (right && !right.visited) neighbours.push(right);\n    if (bottom && !bottom.visited) neighbours.push(bottom);\n    if (left && !left.visited) neighbours.push(left);\n    if (neighbours.length > 0) {\n      return neighbours[Math.floor(Math.random() * neighbours.length)];\n    } else return undefined;\n  };\n\n  removeWalls = () => {\n    let x = current.i - next.i;\n    let y = current.j - next.j;\n    if (x < 0) {\n      current.walls[1] = false;\n      next.walls[3] = false;\n    } else if (x > 0) {\n      current.walls[3] = false;\n      next.walls[1] = false;\n    } else if (y > 0) {\n      current.walls[0] = false;\n      next.walls[2] = false;\n    } else if (y < 0) {\n      current.walls[2] = false;\n      next.walls[0] = false;\n    }\n  };\n\n  index = (i, j) => {\n    if (i < 0 || j < 0 || i > cols - 1 || j > rows - 1) return -1;\n    return j * cols + i;\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  cleaning = () => {\n    grid = [];\n    current = null;\n    next = null;\n    start = null;\n    stack = [];\n    reLoad = false;\n    solution = false;\n  }\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"BackTracking\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackTracking;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Cell from \"./Cell\";\nimport NavBar from \"./components/NavBar\";\nimport {\n  showingCompleteGrid,\n  showingOpenSet,\n  showingclosedSet,\n  showingPath,\n} from \"./Draw\";\n\nlet cols = 25,\n  rows = 11;\nlet length, breadth;\nlet grid = new Array(cols);\nlet openSet = [];\nlet closedSet = [];\nlet start = null,\n  end = null,\n  current = null;\nlet noSolution = false,\n  solution = false;\nlet path = [];\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass AStar extends React.Component {\n  state = { start: null, end: null, stage: 0 };\n\n  componentDidUpdate = () => {\n    if (reLoad) {\n      this.cleaning();\n      this.initializeGrid();\n    }\n    this.initializeStartAndEnd();\n  };\n\n  componentDidMount = () => {\n    this.initializeGrid();\n    this.initializeStartAndEnd();\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5\n      .createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8)\n      .parent(parent);\n    this.initializeCanvas(p5);\n    p5.frameRate(5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.8);\n    this.initializeCanvas(p5);\n    if(solution || noSolution){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n    length = p5.width / cols;\n    breadth = p5.height / rows;\n  };\n\n  initializeGrid = () => {\n    for (let i = 0; i < cols; i++) {\n      grid[i] = new Array(rows);\n    }\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        grid[i][j] = new Cell(i, j, rows, cols);\n        grid[i][j].addNeighbours();\n      }\n    }\n  };\n\n  initializeStartAndEnd = () => {\n    start = this.state.start;\n    end = this.state.end;\n    if (start) openSet.push(start);\n  };\n\n  draw = (p5) => {\n    if(flag === true){\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n      showingPath(p5, path, length, breadth, start, end);\n    }\n    if (!noSolution && !solution) {\n      p5.background(0);\n      if (start && end) {\n        if (openSet.length > 0) {\n          current = openSet[this.lowest_f_value_index()];\n          if (current === end) {\n            solution = true;\n          }\n          this.removeFromArray(openSet, current);\n          closedSet.push(current);\n\n          let neighbours = current.neighbours;\n          for (let i = 0; i < neighbours.length; i++) {\n            let [x, y] = neighbours[i];\n            let neighbour = grid[x][y];\n            if (!closedSet.includes(neighbour) && !neighbour.wall) {\n              let tempG = current.g + 1;\n              if (openSet.includes(neighbour)) {\n                if (tempG < neighbour.g) {\n                  this.updateNeighbourScore(neighbour, tempG);\n                }\n              } else {\n                openSet.push(neighbour);\n                this.updateNeighbourScore(neighbour, tempG);\n              }\n            }\n          }\n        } else if (!solution) {\n          noSolution = true;\n        }\n      }\n\n      showingCompleteGrid(p5, grid, length, breadth, rows, cols, start, end);\n\n      showingOpenSet(p5, openSet, length, breadth, start, end);\n\n      showingclosedSet(p5, closedSet, length, breadth, start, end);\n\n      if (!noSolution && current) {\n        path = [];\n        path.push(current);\n        while (current.prev) {\n          path.push(current.prev);\n          current = current.prev;\n        }\n      }\n\n      showingPath(p5, path, length, breadth, start, end);\n    }\n\n    if (noSolution) {\n      console.log(\"No Solution\");\n    }\n  };\n\n  updateNeighbourScore = (neighbour, tempG) => {\n    neighbour.g = tempG;\n    neighbour.prev = current;\n    neighbour.h = this.heuristic(neighbour.i, neighbour.j);\n    neighbour.f = neighbour.g + neighbour.h;\n  };\n\n  lowest_f_value_index = () => {\n    let lowestIndex = 0;\n    for (let i = 0; i < openSet.length; i++) {\n      if (openSet[i].f < openSet[lowestIndex].f) lowestIndex = i;\n    }\n    return lowestIndex;\n  };\n\n  removeFromArray(array, element) {\n    for (let i = array.length - 1; i >= 0; i--) {\n      if (array[i] === element) array.splice(i, 1);\n    }\n  }\n\n  mousePressed = (e) => {\n    let x = e.mouseX;\n    let y = e.mouseY;\n    let i = Math.floor(x / length);\n    let j = Math.floor(y / breadth);\n    if (i >= 0 && j >= 0 && i < cols && j < rows && !grid[i][j].wall) {\n      if (!this.state.start) this.setState({ start: grid[i][j], stage: 1 });\n      else if (!this.state.end) this.setState({ end: grid[i][j], stage: 2 });\n    }\n  };\n\n  cleaning = () => {\n    openSet = [];\n    closedSet = [];\n    path = [];\n    current = null;\n    reLoad = false;\n    noSolution = false;\n    solution = false;\n  };\n\n  heuristic(i, j) {\n    let x = this.state.end.i - i;\n    let y = this.state.end.j - j;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    reLoad = true;\n    this.setState({ start: null, end: null, stage: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"A*\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n        />\n        <div className=\"container\">\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AStar;","class Cell{\n    constructor(i, j){\n        this.i=i;\n        this.j=j;\n        this.visited = false;\n        this.walls = [true, true, true, true];\n    }\n}\n\nexport default Cell;","import React from \"react\";\nimport BackButton from \"../../utility_components/BackButton\";\nimport ClearButton from \"../../utility_components/ClearButton\";\n\nclass NavBar extends React.Component {\n    onBackButtonClick = () => {\n        this.props.onBackButtonClick();\n      }\n    \n      onClearButtonClick = () => {\n        this.props.onClearButtonClick();\n      }\n    \n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div>\n          <h2>BackTracking</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\n          Click from where you want to start\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2>BackTracking</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick} />\n          <ClearButton onClearButtonClick={this.onClearButtonClick} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default NavBar;\n","import React from 'react'\nimport '../css/graph.css'\n\nconst PRIMARY_COLOR = 'turquoise';\n\nconst Graph = (props) => {\n\n    const graph = props.array.map((num, id) => {\n        return <div key={id} className=\"array-bar\"  style={{\n            backgroundColor: PRIMARY_COLOR,\n            height: `${num}px`,\n          }}></div>\n    });\n\n    return (\n        <div className=\"array-container\"> \n            {graph}\n        </div>\n    );\n}\n\nexport default Graph;","export function getMergeSortAnimations(array){\n  const animations = [];\n  const auxArray = array.slice();\n  mergesort(array, 0, array.length-1, auxArray, animations);\n  return animations;\n}\n\nfunction mergesort(array, start, end, auxArray, animations){\n  if(start === end)\n    return;\n  const mid = Math.floor((start + end)/2);\n  mergesort(auxArray, start, mid, array, animations);\n  mergesort(auxArray, mid+1, end, array, animations);\n  merge(array, start, end, auxArray, animations);\n}\n\nfunction merge(array, start, end, auxArray, animations){\n  const mid = Math.floor((start+end)/2);\n  let i = start, j = mid+1, k = start;\n  while(i <= mid && j <= end){\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if(auxArray[i] <= auxArray[j]){\n      animations.push([k, auxArray[i]]);\n      array[k++] = auxArray[i++];\n    }\n    else{  \n      animations.push([k, auxArray[j]]);\n      array[k++] = auxArray[j++];\n    }\n  }\n  while(i <= mid){\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxArray[i]]);\n    array[k++] = auxArray[i++];\n  }\n  while(j <= end){\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxArray[j]]);\n    array[k++] = auxArray[j++];\n  }\n}","export function getBubbleSortAnimations(array){\n    const animations = [];\n    bubblesort(array, animations);\n    return animations;\n}\n\nfunction bubblesort(array, animations){\n    const n = array.length - 1;\n    for(let i = 0 ;  i < n ; i++){\n        for(let j = 0 ; j < n - i ; j++){\n            animations.push([j, j+1, 0]);\n            animations.push([j, j+1, 2]);\n            if(array[j] > array[j+1]){\n                animations.push([j, array[j+1], 1]);\n                animations.push([j+1, array[j], 1]);\n                let temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n        }\n    }\n}","export function getSelectionSortAnimations(array){\n    const animations = [];\n    selectionsort(array, animations);\n    return animations;\n}\n\nfunction selectionsort(array, animations){\n    const n = array.length;\n    for(let i = 0 ; i < n-1 ; i++){\n        let maxi = array[0], k = 0;\n        for(let j = 0 ;  j < n-i ; j++){\n            animations.push([j, -1]);\n            animations.push([j, -2]);\n            if(maxi < array[j]){\n                maxi = array[j];\n                k = j;\n            }\n        }\n        animations.push([k, array[n-i-1]]);\n        animations.push([n-i-1, array[k]]);\n        let temp = array[k];\n        array[k] = array[n-i-1];\n        array[n-i-1] = temp;\n    }\n}","export function getInsertionSortAnimations(array){\n    const animations = [];\n    insertionsort(array, animations);\n    return animations;\n}\n\nfunction insertionsort(array, animations){\n    const n = array.length - 1;\n    for(let i = 1 ; i <= n ; i++){\n        animations.push([i, -1]);\n        animations.push([i, -2]);\n        let temp = array[i], j = i-1;\n        for( ; j >= 0 ; j--){\n            animations.push([j, -1]);\n            animations.push([j, -2]);\n            if(array[j] > temp){\n                animations.push([j+1, array[j]]);\n                array[j+1] = array[j];\n            }\n            else\n                break;\n        }\n        animations.push([j+1, temp]);\n        array[j+1] = temp;\n    }\n}","export function getQuickSortAnimations(array){\n    const animations = [];\n    quicksort(array, 0, array.length - 1, animations);\n    return animations;\n}\n\nfunction quicksort(array, start, end, animations){\n    if(start < end){\n        const pIndex = randomisedPartition(array, start, end, animations);\n        quicksort(array, start, pIndex-1, animations);\n        quicksort(array, pIndex+1, end, animations);\n    }\n}\n\nfunction randomisedPartition(array, start, end, animations){\n    const k = Math.floor(Math.random() * (end-start+1)) + start;\n    animations.push([k, array[end]]);\n    animations.push([end, array[k]]);\n    let temp = array[k];\n    array[k] = array[end];\n    array[end] = temp;\n    return partition(array, start, end, animations);\n}\n\nfunction partition(array, start, end, animations){\n    let pivot = array[end];\n    let pIndex = start;\n    for(let i = start ; i < end ; i++){\n        if(array[i] < pivot){\n            animations.push([i, array[pIndex]]);\n            animations.push([pIndex, array[i]]);\n            let temp = array[i];\n            array[i] = array[pIndex];\n            array[pIndex] = temp;\n            pIndex++;\n        }\n    }\n    animations.push([end, array[pIndex]]);\n    animations.push([pIndex, array[end]]);\n    array[end] = array[pIndex];\n    array[pIndex] = pivot;\n    return pIndex;\n}","const ANIMATION_SPEED_MS = 10;\nconst PRIMARY_COLOR = \"turquoise\";\nconst SECONDARY_COLOR = \"red\";\n\nexport function animateMergeSort(animations) {\n  const arrayBars = document.getElementsByClassName(\"array-bar\");\n  for ( let i = 0 ; i < animations.length; i++) {\n    const isColorChange = i % 3 !== 2;\n    if (isColorChange) {\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOneStyle = arrayBars[barOneIdx].style;\n      const barTwoStyle = arrayBars[barTwoIdx].style;\n      const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n      setTimeout(() => {\n        barOneStyle.backgroundColor = color;\n        barTwoStyle.backgroundColor = color;\n      }, i * ANIMATION_SPEED_MS);\n    } else {\n      setTimeout(() => {\n        const [barOneIdx, newHeight] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        barOneStyle.height = `${newHeight}px`;\n      }, i * ANIMATION_SPEED_MS);\n    }\n  }\n}\n","const ANIMATION_SPEED_MS = 2;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateBubbleSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ; i < animations.length ; i++){\n        const [barOneIdx, barTwoIdx, decider] = animations[i];\n        if(decider === 0){\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = SECONDARY_COLOR;\n              barTwoStyle.backgroundColor = SECONDARY_COLOR;\n            }, i * ANIMATION_SPEED_MS);\n        }\n        else if(decider === 2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n            barTwoStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else{\n            const newHeight = barTwoIdx;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            setTimeout(() => {\n              barOneStyle.backgroundColor= 'blue';\n              barOneStyle.height = `${newHeight}px`;\n              barOneStyle.backgroundColor = PRIMARY_COLOR;\n            }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","const ANIMATION_SPEED_MS = 1;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateSelectionSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        if(newHeight === -1){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else if(newHeight === -2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        } \n        else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","const ANIMATION_SPEED_MS = 10;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateQuickSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        // if(newHeight === -1){\n        //   const barOneStyle = arrayBars[barOneIdx].style;\n        //   setTimeout(() => {\n        //     barOneStyle.backgroundColor = SECONDARY_COLOR;\n        //   }, i*ANIMATION_SPEED_MS);\n        // }\n        // else if(newHeight === -2){\n        //   const barOneStyle = arrayBars[barOneIdx].style;\n        //   setTimeout(() => {\n        //     barOneStyle.backgroundColor = PRIMARY_COLOR;\n        //   }, i*ANIMATION_SPEED_MS);\n        // } \n        // else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        // }\n      }\n}","const ANIMATION_SPEED_MS = 2;\nconst PRIMARY_COLOR = 'turquoise';\nconst SECONDARY_COLOR = 'red';\n\nexport function animateInsertionSort(animations){\n    const arrayBars = document.getElementsByClassName('array-bar');\n      for(let i = 0 ;  i < animations.length ; i++){\n        const [barOneIdx, newHeight] = animations[i];\n        if(newHeight === -1){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = SECONDARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        }\n        else if(newHeight === -2){\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\n          }, i*ANIMATION_SPEED_MS);\n        } \n        else{\n          const barOneStyle = arrayBars[barOneIdx].style;\n          setTimeout(() => {\n            barOneStyle.height = `${newHeight}px`;\n          }, i*ANIMATION_SPEED_MS);\n        }\n      }\n}","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"./NavBar\";\n\nlet array = [];\nlet visited = [];\nlet n = 30;\nlet length, breadth;\nlet key = null;\nlet index = 0;\nlet found = false;\nlet reLoad = false;\nlet xyz;\nlet flag = false;\n\nclass LinearSearch extends React.Component {\n  state = { key: null, stage: 0 };\n \n  componentDidMount() {\n    this.resetArray();\n    key = this.state.key;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n        this.resetArray();\n        reLoad = false;\n    }\n    key = this.state.key;\n  }\n\n  resetArray() {\n    for (let i = 0; i < n; i++) {\n      array.push(Math.floor(Math.random() * 100 + 1));\n    }\n    for (let i = 0; i < n; i++) {\n      visited.push(false);\n    }\n  }\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\n    p5.frameRate(5);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\n    this.initializeCanvas(p5);\n    if(found){\n      flag = true;\n    }\n  }\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) / 2;\n    xyz.position(x, y);\n    length = p5.width / n;\n    breadth = p5.height * 0.9;\n    console.log(length);\n    console.log(breadth);\n  };\n\n  draw = (p5) => {\n    if(flag){\n      this.showArray(p5);\n\n    }\n    if (!found && (index < n+1)) {\n      p5.background(255);\n      this.showArray(p5);\n      if (key) {\n        if (index !== -1) {\n          if (array[index] == key) {\n            p5.fill(255, 0, 0);\n            visited[index] = true;\n            found = true;\n          } else {\n            visited[index] = true;\n            p5.fill(0, 255, 0);\n          }\n        }\n        p5.rect(index * length, 0, length, breadth);\n        p5.fill(0);\n        p5.textSize((length + breadth) / 6);\n        p5.text(array[index], index * length + (6 * length) / 24, (15 * breadth) / 24);\n        index = index + 1;\n      }\n    }\n    else if(index == 21 && !found){\n      console.log(\"Not found\");\n      found = true;\n    }\n  };\n\n  showArray = (p5) => {\n    for (let i = 0; i < n; i++) {\n      if (!visited[i]) {\n        p5.fill(4, 228, 221);\n      }\n      else if(flag && array[i] == key){\n        console.log(1);\n        p5.fill(255, 0, 0);\n      }\n      else {\n        p5.fill(0, 0, 255);\n      }\n      p5.stroke(0);\n      p5.rect(i * length, 0, length, breadth);\n      p5.fill(0);\n      p5.textSize((length + breadth) / 6);\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\n    }\n\n  }\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    reLoad = true;\n    this.setState({key : null, stage : 0});\n  };\n\n  cleaning = () => {\n    array = [];\n    visited = [];\n    index = 0;\n    found = false;\n  }\n\n  onSearchButtonClick = () => {\n    let n = document.getElementById(\"key\").value;\n    if(this.state.key === null){\n      this.setState({key : n, stage : 1});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container mb-3\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Linear Search\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onSearchButtonClick = {this.onSearchButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LinearSearch;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport NavBar from \"../linearsearch/NavBar\";\n\nlet array = [];\nlet n = 30;\nlet length, breadth;\nlet key = null;\nlet found = false;\nlet reLoad = false;\nlet lo, hi, mid;\nlet xyz;\nlet flag = false;\n\nclass BinarySearch extends React.Component {\n  state = { key: null, stage: 0 };\n\n  componentDidMount() {\n    lo = 0;\n    hi = n - 1;\n    this.resetArray();\n    key = this.state.key;\n  }\n\n  componentDidUpdate() {\n    if (reLoad) {\n      reLoad = false;\n      this.resetArray();\n    }\n    key = this.state.key;\n  }\n\n  resetArray() {\n    for (let i = 0; i < n; i++) {\n      array.push(Math.floor(Math.random() * 100 + 1));\n      array.sort((a, b) => a - b);\n    }\n    key = array[Math.floor(Math.random() * 19)];\n  }\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09).parent(parent);\n    p5.frameRate(5);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    xyz = p5.createCanvas(p5.windowWidth * 0.95, p5.windowHeight * 0.09);\n    this.initializeCanvas(p5);\n    if(found){\n      flag = true;\n    }\n  };\n\n  initializeCanvas = (p5) => {\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) / 2;\n    xyz.position(x, y);\n    length = p5.width / n;\n    breadth = p5.height * 0.9;\n  };\n\n  draw = (p5) => {\n    if(flag == true){\n      this.showArray(p5);\n    }\n    if (!found && lo <= hi) {\n      p5.background(255);\n      this.showArray(p5);\n      if (key) {\n        mid = Math.floor((lo + hi) / 2);\n        if (array[mid] == key) {\n          found = true;\n          p5.fill(255, 0, 0);\n          p5.rect(mid * length, 0, length, breadth);\n          p5.fill(0);\n          p5.textSize((length + breadth) / 6);\n          p5.text(array[mid], mid * length + (9 * length) / 24, (7 * breadth) / 12);\n        } else if (array[mid] > key) {\n          hi = mid - 1;\n        } else if (array[mid] < key) {\n          lo = mid + 1;\n        }\n      }\n    }\n    else if(!found){\n      console.log(\"Not Found\");\n      this.showArray(p5);\n    }\n  };\n\n  showArray = (p5) => {\n    for (let i = 0; i < n; i++) {\n      if(array[i] == key){\n        p5.fill(255, 0, 0);\n      }\n      else if(i >= lo && i <= hi) {\n        p5.fill(0, 255, 0);\n      } else{\n        p5.fill(255);\n      }\n      p5.stroke(0);\n      p5.rect(i * length, 0, length, breadth);\n      p5.fill(0);\n      p5.textSize((length + breadth) / 6);\n      p5.text(array[i], i * length + (6 * length) / 24, (15 * breadth) / 24);\n    }\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    reLoad = true;\n    this.setState({ key: null, stage: 0 });\n  };\n\n  cleaning = () => {\n    array = [];\n    lo = 0;\n    hi = n - 1;\n    found = false;\n  }\n\n  onSearchButtonClick = () => {\n    let n = document.getElementById(\"key\").value;\n    console.log(n);\n    if(this.state.key === null){\n      this.setState({key : n, stage : 1});\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar\n          stage={this.state.stage}\n          algo=\"Binary Search\"\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onSearchButtonClick = {this.onSearchButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized={this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BinarySearch;","import React from 'react';\nimport { getMergeSortAnimations } from \"./sortingAlgos/mergesort\";\nimport { getBubbleSortAnimations } from \"./sortingAlgos/bubblesort\";\nimport { getSelectionSortAnimations } from \"./sortingAlgos/selectionsort\";\nimport { getInsertionSortAnimations } from \"./sortingAlgos/insertionsort\";\nimport { getQuickSortAnimations } from \"./sortingAlgos/quicksort\";\nimport { animateMergeSort } from \"./animations/mergesort_animations\";\nimport { animateBubbleSort } from \"./animations/bubblesort_animations\";\nimport { animateSelectionSort } from \"./animations/selectionsort_animations\";\nimport { animateQuickSort } from \"./animations/quicksort_animations\";\nimport { animateInsertionSort } from \"./animations/insertionsort_animations\";\nimport BackButton from '../../utility_components/BackButton';\nimport \"../css/button.css\";\n\nclass Menu extends React.Component{\n\n    generateNewArray = () => {\n        this.props.onGenerateNewArray();\n      };\n    \n      mergesort = async () => {\n        this.disablingButtons();\n        const animations = getMergeSortAnimations(this.props.array);\n        animateMergeSort(animations);\n      };\n\n      bubblesort = () => {\n        this.disablingButtons();\n        const animations = getBubbleSortAnimations(this.props.array);\n        animateBubbleSort(animations);\n      };\n     \n      selectionsort = () => {\n        this.disablingButtons();\n        const animations = getSelectionSortAnimations(this.props.array);\n        animateSelectionSort(animations);\n      };\n    \n      insertionsort = () => {\n        this.disablingButtons();\n        const animations = getInsertionSortAnimations(this.props.array);\n        animateInsertionSort(animations);\n      };\n    \n      quicksort = () => {\n        this.disablingButtons();\n        const animations = getQuickSortAnimations(this.props.array);\n        animateQuickSort(animations);\n      };\n\n      onBackButtonClick = () => {\n          this.props.onBackButtonClick();\n      }\n\n      onClearButtonClick = () => {\n        document.getElementById(\"bs\").disabled = false;\n      }\n\n      disablingButtons = () => {\n        document.getElementById(\"ms\").disabled = true;\n        document.getElementById(\"bs\").disabled = true;\n        document.getElementById(\"ss\").disabled = true;\n        document.getElementById(\"is\").disabled = true;\n        document.getElementById(\"qs\").disabled = true;\n        document.getElementById(\"gnw\").disabled = true;\n      }\n      \n    render(){\n        return (\n          <div className=\"container mt-3\">\n            <button onClick={this.generateNewArray} className=\"btn btn-primary\" id=\"gnw\">Generate Array</button>\n            <BackButton onBackButtonClick={this.onBackButtonClick}/>\n            <button class=\"b btn btn-outline-secondary\" id=\"ms\" onClick={this.mergesort}>MergeSort</button>\n            <button class=\"c btn btn-outline-success\" id=\"bs\" onClick={this.bubblesort}>BubbleSort</button>\n            <button class=\"d btn btn-outline-warning\" id=\"ss\" onClick={this.selectionsort}>SelectionSort</button>\n            <button class=\"e btn btn-outline-danger\" id=\"is\" onClick={this.insertionsort}>InsertionSort</button>\n            <button class=\"f btn btn-outline-info\" id=\"qs\" onClick={this.quicksort}>QuickSort</button>\n          </div>\n        );\n    }\n}\n\nexport default Menu;","import React from \"react\";\nimport Graph from \"./Graph\";\nimport Menu from \"./Menu\";\n\nclass SortingVisualizer extends React.Component {\n  generateNewArray = () => {\n    this.props.onGenerateNewArray();\n  };\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n        <Menu\n          array={this.props.array}\n          onGenerateNewArray={this.generateNewArray}\n          onBackButtonClick={this.onBackButtonClick}\n        />\n        <Graph array={this.props.array} />\n      </div>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer\";\nimport \"./css/app.css\";\n\nclass Sorting extends React.Component {\n  \n  state = { array: [] };\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray = () => {\n    const array = [];\n    for (let i = 0; i < 100; i++) {\n      array.push(Math.floor(Math.random() * 300) + 20);\n    }\n    this.setState({ array });\n  };\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SortingVisualizer\n          array={this.state.array}\n          onGenerateNewArray={this.resetArray}\n          onBackButtonClick={this.onBackButtonClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Sorting;\n","import React from \"react\";\n\nclass SearchButton extends React.Component {\n  onSearchButtonClick = () => {\n    this.props.onSearchButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onSearchButtonClick} className=\"btn btn-primary m-2\">Search</button>;\n  }\n}\n\nexport default SearchButton;\n","import React from \"react\";\nimport BackButton from \"../utility_components/BackButton\";\nimport ClearButton from \"../utility_components/ClearButton\";\nimport SearchButton from \"../utility_components/SearchButton\";\n\n\nclass NavBar extends React.Component {\n\n  onBackButtonClick = () => {\n    this.props.onBackButtonClick();\n  }\n\n  onClearButtonClick = () => {\n    this.props.onClearButtonClick();\n  }\n\n  onSearchButtonClick = () => {\n    this.props.onSearchButtonClick();\n  }\n\n  render() {\n    if (this.props.stage === 0) {\n      return (\n        <div className=\"mt-3\">\n          <h2>{this.props.algo}</h2>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n          <input id=\"key\" className=\"form-control\" placeholder=\"Enter the element you want to search\"></input>\n          <SearchButton onSearchButtonClick={this.onSearchButtonClick} />\n          </div>\n          <div className=\"col-md-4\">\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n          </div>\n        </div>\n        </div>\n      );\n    }\n    if (this.props.stage === 1) {\n      return (\n        <div className=\"mt-3\">\n          <h2>{this.props.algo}</h2>\n          <BackButton onBackButtonClick={this.onBackButtonClick}/>\n          <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default NavBar;\n","class Point{\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n        // this.r = Math.floor(Math.random(1)*255);\n        // this.g = Math.floor(Math.random(1)*255);\n        // this.b = Math.floor(Math.random(1)*255);\n        this.r = 255;\n        this.g = 255;\n        this.b = 255;\n    }\n}\n\nexport default Point;","import React from \"react\";\n\nclass StartButton extends React.Component {\n  onStartButtonClick = () => {\n    this.props.onStartButtonClick();\n  };\n\n  render() {\n    return <button onClick={this.onStartButtonClick} className=\"btn btn-primary m-2\">Start</button>;\n  }\n}\n\nexport default StartButton;\n","import React from \"react\";\nimport BackButton from \"../utility_components/BackButton\";\nimport ClearButton from \"../utility_components/ClearButton\";\nimport StartButton from \"../utility_components/StartButton\";\n\nclass NavBar extends React.Component{\n    onBackButtonClick = () => {\n        this.props.onBackButtonClick();\n    }\n    onClearButtonClick = () => {\n        this.props.onClearButtonClick();\n    }\n    onStartButtonClick = () => {\n        this.props.onStartButtonClick();\n    }\n    render(){\n        if(this.props.stage === 0){\n            return (\n                <div>\n                    <h2>MST - Minimum Spanning Tree</h2>\n                   <span className=\"fs-5\">Choose the points</span> \n                    <StartButton onStartButtonClick={this.onStartButtonClick}/>\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n                </div>\n\n            );\n        }\n        else if(this.props.stage === 1){\n            return (\n                <div>\n                    <h2>MST - Minimum Spanning Tree</h2>\n                    <BackButton onBackButtonClick={this.onBackButtonClick}/>\n                    <ClearButton onClearButtonClick={this.onClearButtonClick}/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default NavBar;","export function initializePopulation(population, order, populationSize) {\n  for (let i = 0; i < populationSize; i++) {\n    population[i] = shuffle(order);\n  }\n}\n\nfunction shuffle(order) {\n  let array = order.slice();\n  array.sort(() => Math.random() - 0.5);\n  return array;\n}\n\nexport function calcFitness(points, population, fitness) {\n  for (let i = 0; i < population.length; i++) {\n    let d = calcDist(points, population[i]);\n    fitness[i] = 1 / (d + 0.1);\n  }\n  normalizeFitness(fitness);\n}\n\nfunction normalizeFitness(fitness) {\n  let totalFitness = 0;\n  for (let i = 0; i < fitness.length; i++) {\n    totalFitness += fitness[i];\n  }\n  for (let i = 0; i < fitness.length; i++) {\n    fitness[i] = fitness[i] / totalFitness;\n  }\n}\n\nfunction calcDist(points, order) {\n  let sum = 0;\n  for (let i = 1; i < order.length; i++) {\n    let x1 = points[order[i]].x;\n    let y1 = points[order[i]].y;\n    let x2 = points[order[i - 1]].x;\n    let y2 = points[order[i - 1]].y;\n    let x = x1 - x2;\n    let y = y1 - y2;\n    let d = Math.sqrt(x * x + y * y);\n    sum += d;\n  }\n  return sum;\n}\n\nexport function getCurrentBest(fitness) {\n  let index = -1;\n  let best = -1;\n  for (let i = 0; i < fitness.length; i++) {\n    if (fitness[i] > best) {\n      best = fitness[i];\n      index = i;\n    }\n  }\n  return index;\n}\n\nexport function nextGeneration(population, fitness) {\n  let newPopulation = [];\n  for (let i = 0; i < population.length; i++) {\n    let order1 = getOne(population, fitness);\n    let order2 = getOne(population, fitness);\n    let newOrder = crossOver(order1, order2);\n    newOrder = mutate(newOrder, 0.01);\n    newPopulation.push(newOrder);\n  }\n  return newPopulation;\n}\n\nfunction getOne(list, prob) {\n  var index = 0;\n  var r = Math.random(1);\n\n  while (r > 0) {\n    r = r - prob[index];\n    index++;\n  }\n  index--;\n  return list[index].slice();\n}\n\nfunction crossOver(order1, order2) {\n  var start = Math.floor(Math.random(1) * order1.length);\n  var end = Math.floor(\n    Math.random(1) * (order1.length - (start + 1) + 1) + start + 1\n  );\n  var temp = order1.slice(start, end);\n  let newOrder = [];\n  for (let i = 0; i < order1.length; i++) {\n    newOrder[i] = Infinity;\n  }\n  for (let i = start; i < end; i++) {\n    newOrder[i] = order1[i];\n  }\n  let j = 0;\n  for (let i = 0; i < order2.length; i++) {\n    var idx = order2[i];\n    if (j === start) j = end;\n    if (!temp.includes(idx)) {\n      newOrder[j++] = idx;\n    }\n  }\n  return newOrder;\n}\n\nfunction mutate(order, mutationRate) {\n  if (Math.random(1) < mutationRate) {\n    var indexA = Math.floor(Math.random(1) * order.length);\n    var indexB = (indexA + 1) % order.length;\n    order = swap(order, indexA, indexB);\n  }\n  return order;\n}\n\nfunction swap(order, i, j) {\n  let temp = order[i];\n  order[i] = order[j];\n  order[j] = temp;\n  return order;\n}\n","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport Point from \"./Point\";\nimport NavBar from \"./NavBar\";\nimport {initializePopulation} from \"./GeneticAlgo\";\nimport {calcFitness} from \"./GeneticAlgo\";\nimport {getCurrentBest} from \"./GeneticAlgo\";\nimport {nextGeneration} from \"./GeneticAlgo\";\n\nlet points = [];\nlet width;\nlet height;\nlet bestFitness = -1;\nlet bestPath = [];\nlet order = [];\nlet complete = false;\nlet flag = false;\nlet population = [];\nlet fitness = [];\nlet populationSize = 1000;\nlet xyz;\n\n\n\nclass TSP extends React.Component {\n  state = { stage: 0 };\n\n  componentDidUpdate = () => {\n    initializePopulation(population, order, populationSize);\n  };\n\n  setup = (p5, parent) => {\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78).parent(parent);\n    this.initializeCanvas(p5);\n  };\n\n  windowResized = (p5) => {\n    let prevWidth = p5.width;\n    let prevHeight = p5.height;\n    xyz = p5.createCanvas(p5.windowWidth*0.95, p5.windowHeight * 0.78);\n    this.initializeCanvas(p5);\n    for(let i = 0 ; i < points.length ; i++){\n      points[i].x = (p5.width * points[i].x) / prevWidth;\n      points[i].y = (p5.height * points[i].y) / prevHeight;\n    }\n  }\n\n  initializeCanvas = (p5) => {\n    width = p5.windowWidth*0.95;\n    height = p5.windowHeight * 0.78;\n    let x = (p5.windowWidth - p5.width) / 2;\n    let y = (p5.windowHeight - p5.height) * 0.9;\n    xyz.position(x, y);\n  }\n\n  draw = (p5) => {\n    if (!complete) {\n      p5.background(0);\n      if (this.state.stage === 0) {\n        p5.noStroke();\n        p5.fill(255);\n        p5.noCursor();\n        p5.ellipse(p5.mouseX, p5.mouseY, 12);\n      }\n      this.showPoints(p5);\n      if (this.state.stage === 1) {\n        calcFitness(points, population, fitness);\n        let currentBestIndex= getCurrentBest(fitness);\n        let currentBestFitness = fitness[currentBestIndex];\n        let currentBestPath = population[currentBestIndex];\n        this.showLines(currentBestPath, p5, 255, 255, 255, 0.5);\n        if (currentBestFitness > bestFitness) {\n          bestFitness = currentBestFitness;\n          bestPath = currentBestPath;\n        }\n        this.showLines(bestPath, p5, 255, 0, 255, 6);\n        population = nextGeneration(population, fitness);\n      }\n    } else if (!flag) {\n        this.showFinalPath(p5);\n    }\n  };\n\n  showFinalPath = (p5) => {\n    p5.background(0);\n    this.showPoints(p5);\n    this.showLines(bestPath, p5, 255, 0, 255, 6);\n    flag = true;\n  };\n\n  calcPathDistance = (p5) => {\n    let dist = 0;\n    for (let i = 1; i < order.length; i++) {\n      dist += p5.dist(\n        points[order[i]].x,\n        points[order[i]].y,\n        points[order[i - 1]].x,\n        points[order[i - 1]].y\n      );\n    }\n    return dist;\n  };\n\n  swap(array, i, j) {\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  showLines = (order, p5, r, g, b, strokeWeight) => {\n    p5.beginShape();\n    p5.stroke(r, g, b);\n    p5.strokeWeight(strokeWeight);\n    p5.noFill();\n    for (let i = 0; i < order.length; i++) {\n      p5.vertex(points[order[i]].x, points[order[i]].y);\n    }\n    p5.endShape();\n  };\n\n  showPoints = (p5) => {\n    for (let i = 0; i < points.length; i++) {\n      p5.fill(points[i].r, points[i].g, points[i].b);\n      p5.ellipse(points[i].x, points[i].y, 25, 25);\n    }\n  };\n\n  mousePressed = (e) => {\n    if (this.state.stage === 0) {\n      let x = e.mouseX;\n      let y = e.mouseY;\n      if (x > 0 && x < width && y > 0 && y < height) {\n        points.push(new Point(x, y));\n        console.log(x, y);\n      }\n    }\n  };\n\n  onBackButtonClick = () => {\n    this.cleaning();\n    this.props.onBackButtonClick();\n  };\n\n  onClearButtonClick = () => {\n    this.cleaning();\n    this.setState({ stage: 0 });\n  };\n\n  cleaning = () => {\n    bestFitness = -1;\n    bestPath = [];\n    points = [];\n    order = [];\n    complete = false;\n  };\n\n  onStartButtonClick = () => {\n    order = [];\n    for (let i = 0; i < points.length; i++) {\n      order.push(i);\n    }\n    this.setState({ stage: 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"container mt-3\">\n        <NavBar\n          stage={this.state.stage}\n          onBackButtonClick={this.onBackButtonClick}\n          onClearButtonClick={this.onClearButtonClick}\n          onStartButtonClick={this.onStartButtonClick}\n        />\n        <Sketch\n          setup={this.setup}\n          draw={this.draw}\n          mousePressed={this.mousePressed}\n          windowResized = {this.windowResized}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TSP;","import React from \"react\";\nimport Dijkstra from \"./dijkstra/Dijkstra\";\nimport BackTracking from \"./backtracking/BackTracking\";\nimport AStar from \"./astar/AStar\";\nimport Sorting from \"./sorting/Sorting\";\nimport LinearSearch from \"./linearsearch/LinearSearch\";\nimport BinarySearch from \"./binarysearch/BinarySearch\";\nimport TSP from \"./tsp/TSP\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  state = { option: 0 };\n\n  onBackButtonClick = () => {\n    this.setState({ option: 0 });\n  };\n\n  render() {\n    if (this.state.option === 0) {\n      return (\n        <div className=\"container mt-3\">\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 1 });\n            }}\n          >\n            Dijkstra\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 2 });\n            }}\n          >\n            Back Tracking\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 3 });\n            }}\n          >\n            A*\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 4 });\n            }}\n          >\n            Sorting\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 5 });\n            }}\n          >\n            Linear Search\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 6 });\n            }}\n          >\n            Binary Search\n          </button>\n          <button className=\"btn btn-primary m-2\"\n            onClick={() => {\n              this.setState({ option: 7 });\n            }}\n          >\n            Minimum Spanning Tree\n          </button>\n        </div>\n      );\n    } else if (this.state.option === 1) {\n      return <Dijkstra onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 2) {\n      return <BackTracking onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 3) {\n      return <AStar onBackButtonClick={this.onBackButtonClick} />;\n    } else if (this.state.option === 4) {\n      return <Sorting onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 5) {\n      return <LinearSearch onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 6) {\n      return <BinarySearch onBackButtonClick={this.onBackButtonClick} />;\n    }else if (this.state.option === 7) {\n      return <TSP onBackButtonClick={this.onBackButtonClick} />;\n    }\n\n\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}